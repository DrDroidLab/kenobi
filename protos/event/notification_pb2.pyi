"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class SlackConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WEBHOOK_URL_FIELD_NUMBER: builtins.int
    webhook_url: builtins.str
    def __init__(
        self,
        *,
        webhook_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["webhook_url", b"webhook_url"]) -> None: ...

global___SlackConfiguration = SlackConfiguration

@typing_extensions.final
class EmailConfiguration(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    RECIPIENT_EMAIL_ID_FIELD_NUMBER: builtins.int
    recipient_email_id: builtins.str
    def __init__(
        self,
        *,
        recipient_email_id: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["recipient_email_id", b"recipient_email_id"]) -> None: ...

global___EmailConfiguration = EmailConfiguration

@typing_extensions.final
class NotificationConfig(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Channel:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _ChannelEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[NotificationConfig._Channel.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: NotificationConfig._Channel.ValueType  # 0
        SLACK: NotificationConfig._Channel.ValueType  # 1
        EMAIL: NotificationConfig._Channel.ValueType  # 2

    class Channel(_Channel, metaclass=_ChannelEnumTypeWrapper): ...
    UNKNOWN: NotificationConfig.Channel.ValueType  # 0
    SLACK: NotificationConfig.Channel.ValueType  # 1
    EMAIL: NotificationConfig.Channel.ValueType  # 2

    CHANNEL_FIELD_NUMBER: builtins.int
    SLACK_CONFIGURATION_FIELD_NUMBER: builtins.int
    EMAIL_CONFIGURATION_FIELD_NUMBER: builtins.int
    channel: global___NotificationConfig.Channel.ValueType
    @property
    def slack_configuration(self) -> global___SlackConfiguration: ...
    @property
    def email_configuration(self) -> global___EmailConfiguration: ...
    def __init__(
        self,
        *,
        channel: global___NotificationConfig.Channel.ValueType = ...,
        slack_configuration: global___SlackConfiguration | None = ...,
        email_configuration: global___EmailConfiguration | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config", b"config", "email_configuration", b"email_configuration", "slack_configuration", b"slack_configuration"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["channel", b"channel", "config", b"config", "email_configuration", b"email_configuration", "slack_configuration", b"slack_configuration"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["config", b"config"]) -> typing_extensions.Literal["slack_configuration", "email_configuration"] | None: ...

global___NotificationConfig = NotificationConfig
