"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import google.protobuf.wrappers_pb2
import protos.event.base_pb2
import protos.event.entity_pb2
import protos.event.metric_pb2
import protos.event.monitor_pb2
import protos.event.query_base_pb2
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Coordinate(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ROW_FIELD_NUMBER: builtins.int
    COLUMN_FIELD_NUMBER: builtins.int
    @property
    def row(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
    @property
    def column(self) -> google.protobuf.wrappers_pb2.Int64Value: ...
    def __init__(
        self,
        *,
        row: google.protobuf.wrappers_pb2.Int64Value | None = ...,
        column: google.protobuf.wrappers_pb2.Int64Value | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["column", b"column", "row", b"row"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["column", b"column", "row", b"row"]) -> None: ...

global___Coordinate = Coordinate

@typing_extensions.final
class PanelCoordinates(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    START_FIELD_NUMBER: builtins.int
    END_FIELD_NUMBER: builtins.int
    @property
    def start(self) -> global___Coordinate: ...
    @property
    def end(self) -> global___Coordinate: ...
    def __init__(
        self,
        *,
        start: global___Coordinate | None = ...,
        end: global___Coordinate | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["end", b"end", "start", b"start"]) -> None: ...

global___PanelCoordinates = PanelCoordinates

@typing_extensions.final
class FunnelPanel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    EVENT_KEY_NAME_FIELD_NUMBER: builtins.int
    EVENT_TYPE_IDS_FIELD_NUMBER: builtins.int
    FILTER_KEY_NAME_FIELD_NUMBER: builtins.int
    FILTER_VALUE_FIELD_NUMBER: builtins.int
    event_key_name: builtins.str
    @property
    def event_type_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    filter_key_name: builtins.str
    filter_value: builtins.str
    def __init__(
        self,
        *,
        event_key_name: builtins.str = ...,
        event_type_ids: collections.abc.Iterable[builtins.int] | None = ...,
        filter_key_name: builtins.str = ...,
        filter_value: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["event_key_name", b"event_key_name", "event_type_ids", b"event_type_ids", "filter_key_name", b"filter_key_name", "filter_value", b"filter_value"]) -> None: ...

global___FunnelPanel = FunnelPanel

@typing_extensions.final
class WorkflowPanel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKFLOW_CONFIG_FIELD_NUMBER: builtins.int
    workflow_config: builtins.str
    def __init__(
        self,
        *,
        workflow_config: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["workflow_config", b"workflow_config"]) -> None: ...

global___WorkflowPanel = WorkflowPanel

@typing_extensions.final
class Chart(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Type:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _TypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Chart._Type.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN_CT: Chart._Type.ValueType  # 0
        BAR: Chart._Type.ValueType  # 1
        PIE: Chart._Type.ValueType  # 2
        LINE: Chart._Type.ValueType  # 3
        TABLE: Chart._Type.ValueType  # 4
        VALUE: Chart._Type.ValueType  # 5
        SIMPLE_TABLE: Chart._Type.ValueType  # 6
        COMPLEX_TABLE: Chart._Type.ValueType  # 7
        AREA: Chart._Type.ValueType  # 8

    class Type(_Type, metaclass=_TypeEnumTypeWrapper): ...
    UNKNOWN_CT: Chart.Type.ValueType  # 0
    BAR: Chart.Type.ValueType  # 1
    PIE: Chart.Type.ValueType  # 2
    LINE: Chart.Type.ValueType  # 3
    TABLE: Chart.Type.ValueType  # 4
    VALUE: Chart.Type.ValueType  # 5
    SIMPLE_TABLE: Chart.Type.ValueType  # 6
    COMPLEX_TABLE: Chart.Type.ValueType  # 7
    AREA: Chart.Type.ValueType  # 8

    @typing_extensions.final
    class ChartMetricExpression(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        CONTEXT_FIELD_NUMBER: builtins.int
        METRIC_EXPRESSIONS_FIELD_NUMBER: builtins.int
        context: protos.event.base_pb2.Context.ValueType
        @property
        def metric_expressions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[protos.event.metric_pb2.MetricExpression]: ...
        def __init__(
            self,
            *,
            context: protos.event.base_pb2.Context.ValueType = ...,
            metric_expressions: collections.abc.Iterable[protos.event.metric_pb2.MetricExpression] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["context", b"context", "metric_expressions", b"metric_expressions"]) -> None: ...

    @typing_extensions.final
    class LabelMapping(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        name: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MetricMapping(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        class _Op:
            ValueType = typing.NewType("ValueType", builtins.int)
            V: typing_extensions.TypeAlias = ValueType

        class _OpEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[Chart.MetricMapping._Op.ValueType], builtins.type):  # noqa: F821
            DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
            UNKNOWN_OP: Chart.MetricMapping._Op.ValueType  # 0
            SUM: Chart.MetricMapping._Op.ValueType  # 1
            MATCH: Chart.MetricMapping._Op.ValueType  # 2

        class Op(_Op, metaclass=_OpEnumTypeWrapper): ...
        UNKNOWN_OP: Chart.MetricMapping.Op.ValueType  # 0
        SUM: Chart.MetricMapping.Op.ValueType  # 1
        MATCH: Chart.MetricMapping.Op.ValueType  # 2

        OP_FIELD_NUMBER: builtins.int
        METRIC_LABEL_FIELD_NUMBER: builtins.int
        COMPUTED_METRICS_FIELD_NUMBER: builtins.int
        op: global___Chart.MetricMapping.Op.ValueType
        metric_label: builtins.str
        @property
        def computed_metrics(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
        def __init__(
            self,
            *,
            op: global___Chart.MetricMapping.Op.ValueType = ...,
            metric_label: builtins.str = ...,
            computed_metrics: collections.abc.Iterable[builtins.str] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["computed_metrics", b"computed_metrics", "metric_label", b"metric_label", "op", b"op"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    CHART_METRIC_EXPRESSION_FIELD_NUMBER: builtins.int
    PRIMARY_GROUPING_LABELS_FIELD_NUMBER: builtins.int
    LABELS_SEQUENCE_FIELD_NUMBER: builtins.int
    DISPLAY_METRICS_MAPPING_FIELD_NUMBER: builtins.int
    LABELS_MAPPING_FIELD_NUMBER: builtins.int
    type: global___Chart.Type.ValueType
    @property
    def chart_metric_expression(self) -> global___Chart.ChartMetricExpression: ...
    @property
    def primary_grouping_labels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[protos.event.query_base_pb2.AttributeIdentifier]: ...
    @property
    def labels_sequence(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[protos.event.query_base_pb2.AttributeIdentifier]: ...
    @property
    def display_metrics_mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Chart.MetricMapping]: ...
    @property
    def labels_mapping(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Chart.LabelMapping]: ...
    def __init__(
        self,
        *,
        type: global___Chart.Type.ValueType = ...,
        chart_metric_expression: global___Chart.ChartMetricExpression | None = ...,
        primary_grouping_labels: collections.abc.Iterable[protos.event.query_base_pb2.AttributeIdentifier] | None = ...,
        labels_sequence: collections.abc.Iterable[protos.event.query_base_pb2.AttributeIdentifier] | None = ...,
        display_metrics_mapping: collections.abc.Iterable[global___Chart.MetricMapping] | None = ...,
        labels_mapping: collections.abc.Iterable[global___Chart.LabelMapping] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chart_metric_expression", b"chart_metric_expression"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chart_metric_expression", b"chart_metric_expression", "display_metrics_mapping", b"display_metrics_mapping", "labels_mapping", b"labels_mapping", "labels_sequence", b"labels_sequence", "primary_grouping_labels", b"primary_grouping_labels", "type", b"type"]) -> None: ...

global___Chart = Chart

@typing_extensions.final
class ComplexTableData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ComputedMetric(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        METRIC_LABEL_FIELD_NUMBER: builtins.int
        METRIC_VALUE_FIELD_NUMBER: builtins.int
        FILTER_QUERY_FIELD_NUMBER: builtins.int
        metric_label: builtins.str
        metric_value: builtins.str
        filter_query: builtins.str
        def __init__(
            self,
            *,
            metric_label: builtins.str = ...,
            metric_value: builtins.str = ...,
            filter_query: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["filter_query", b"filter_query", "metric_label", b"metric_label", "metric_value", b"metric_value"]) -> None: ...

    @typing_extensions.final
    class ComplexTableDataElement(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        ELEMENT_VALUE_FIELD_NUMBER: builtins.int
        FILL_COLOR_FIELD_NUMBER: builtins.int
        COMPUTED_METRICS_FIELD_NUMBER: builtins.int
        ELEMENT_TYPE_FIELD_NUMBER: builtins.int
        element_value: builtins.str
        fill_color: builtins.str
        @property
        def computed_metrics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComplexTableData.ComputedMetric]: ...
        element_type: builtins.str
        def __init__(
            self,
            *,
            element_value: builtins.str = ...,
            fill_color: builtins.str = ...,
            computed_metrics: collections.abc.Iterable[global___ComplexTableData.ComputedMetric] | None = ...,
            element_type: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["computed_metrics", b"computed_metrics", "element_type", b"element_type", "element_value", b"element_value", "fill_color", b"fill_color"]) -> None: ...

    @typing_extensions.final
    class ComplexTableDataColumn(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        LABEL_FIELD_NUMBER: builtins.int
        KEY_FIELD_NUMBER: builtins.int
        ELEMENT_FIELD_NUMBER: builtins.int
        label: builtins.str
        key: builtins.str
        @property
        def element(self) -> global___ComplexTableData.ComplexTableDataElement: ...
        def __init__(
            self,
            *,
            label: builtins.str = ...,
            key: builtins.str = ...,
            element: global___ComplexTableData.ComplexTableDataElement | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["element", b"element"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["element", b"element", "key", b"key", "label", b"label"]) -> None: ...

    @typing_extensions.final
    class ComplexTableDataRow(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        COLUMNS_FIELD_NUMBER: builtins.int
        @property
        def columns(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComplexTableData.ComplexTableDataColumn]: ...
        def __init__(
            self,
            *,
            columns: collections.abc.Iterable[global___ComplexTableData.ComplexTableDataColumn] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["columns", b"columns"]) -> None: ...

    METRIC_LABEL_FIELD_NUMBER: builtins.int
    ROWS_FIELD_NUMBER: builtins.int
    metric_label: builtins.str
    @property
    def rows(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ComplexTableData.ComplexTableDataRow]: ...
    def __init__(
        self,
        *,
        metric_label: builtins.str = ...,
        rows: collections.abc.Iterable[global___ComplexTableData.ComplexTableDataRow] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["metric_label", b"metric_label", "rows", b"rows"]) -> None: ...

global___ComplexTableData = ComplexTableData

@typing_extensions.final
class LinkType(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    ICON_URL_FIELD_NUMBER: builtins.int
    name: builtins.str
    icon_url: builtins.str
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        icon_url: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["icon_url", b"icon_url", "name", b"name"]) -> None: ...

global___LinkType = LinkType

@typing_extensions.final
class PanelLink(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TYPE_FIELD_NUMBER: builtins.int
    URL_FIELD_NUMBER: builtins.int
    @property
    def type(self) -> global___LinkType: ...
    url: builtins.str
    def __init__(
        self,
        *,
        type: global___LinkType | None = ...,
        url: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["type", b"type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["type", b"type", "url", b"url"]) -> None: ...

global___PanelLink = PanelLink

@typing_extensions.final
class PanelMetaInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    LINKS_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: builtins.str
    description: builtins.str
    @property
    def links(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PanelLink]: ...
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        description: builtins.str = ...,
        links: collections.abc.Iterable[global___PanelLink] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["description", b"description", "id", b"id", "links", b"links", "name", b"name"]) -> None: ...

global___PanelMetaInfo = PanelMetaInfo

@typing_extensions.final
class PanelData(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _PanelDataType:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _PanelDataTypeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[PanelData._PanelDataType.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        UNKNOWN: PanelData._PanelDataType.ValueType  # 0
        MARKDOWN: PanelData._PanelDataType.ValueType  # 1
        CHART: PanelData._PanelDataType.ValueType  # 2
        SEARCH: PanelData._PanelDataType.ValueType  # 3
        FUNNEL: PanelData._PanelDataType.ValueType  # 4
        WORKFLOW: PanelData._PanelDataType.ValueType  # 5

    class PanelDataType(_PanelDataType, metaclass=_PanelDataTypeEnumTypeWrapper): ...
    UNKNOWN: PanelData.PanelDataType.ValueType  # 0
    MARKDOWN: PanelData.PanelDataType.ValueType  # 1
    CHART: PanelData.PanelDataType.ValueType  # 2
    SEARCH: PanelData.PanelDataType.ValueType  # 3
    FUNNEL: PanelData.PanelDataType.ValueType  # 4
    WORKFLOW: PanelData.PanelDataType.ValueType  # 5

    TYPE_FIELD_NUMBER: builtins.int
    MARKDOWN_FIELD_NUMBER: builtins.int
    CHART_FIELD_NUMBER: builtins.int
    FUNNEL_FIELD_NUMBER: builtins.int
    WORKFLOW_FIELD_NUMBER: builtins.int
    type: global___PanelData.PanelDataType.ValueType
    markdown: builtins.str
    @property
    def chart(self) -> global___Chart: ...
    @property
    def funnel(self) -> global___FunnelPanel: ...
    @property
    def workflow(self) -> global___WorkflowPanel: ...
    def __init__(
        self,
        *,
        type: global___PanelData.PanelDataType.ValueType = ...,
        markdown: builtins.str = ...,
        chart: global___Chart | None = ...,
        funnel: global___FunnelPanel | None = ...,
        workflow: global___WorkflowPanel | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["chart", b"chart", "data", b"data", "funnel", b"funnel", "markdown", b"markdown", "workflow", b"workflow"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["chart", b"chart", "data", b"data", "funnel", b"funnel", "markdown", b"markdown", "type", b"type", "workflow", b"workflow"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["data", b"data"]) -> typing_extensions.Literal["markdown", "chart", "funnel", "workflow"] | None: ...

global___PanelData = PanelData

@typing_extensions.final
class PanelV1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    META_INFO_FIELD_NUMBER: builtins.int
    DATA_FIELD_NUMBER: builtins.int
    COORDINATES_FIELD_NUMBER: builtins.int
    @property
    def meta_info(self) -> global___PanelMetaInfo: ...
    @property
    def data(self) -> global___PanelData: ...
    @property
    def coordinates(self) -> global___PanelCoordinates: ...
    def __init__(
        self,
        *,
        meta_info: global___PanelMetaInfo | None = ...,
        data: global___PanelData | None = ...,
        coordinates: global___PanelCoordinates | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["coordinates", b"coordinates", "data", b"data", "meta_info", b"meta_info"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["coordinates", b"coordinates", "data", b"data", "meta_info", b"meta_info"]) -> None: ...

global___PanelV1 = PanelV1

@typing_extensions.final
class DashboardV1(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    CREATED_AT_FIELD_NUMBER: builtins.int
    PANELS_FIELD_NUMBER: builtins.int
    START_HOUR_FIELD_NUMBER: builtins.int
    name: builtins.str
    created_at: builtins.int
    @property
    def panels(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PanelV1]: ...
    start_hour: builtins.int
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        created_at: builtins.int = ...,
        panels: collections.abc.Iterable[global___PanelV1] | None = ...,
        start_hour: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["created_at", b"created_at", "name", b"name", "panels", b"panels", "start_hour", b"start_hour"]) -> None: ...

global___DashboardV1 = DashboardV1

@typing_extensions.final
class EntityFunnelPanel(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ENTITY_PANEL_FIELD_NUMBER: builtins.int
    NODES_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    @property
    def entity_panel(self) -> protos.event.entity_pb2.EntityPartial: ...
    @property
    def nodes(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[protos.event.monitor_pb2.MonitorPartial]: ...
    @property
    def filter(self) -> protos.event.query_base_pb2.Filter: ...
    def __init__(
        self,
        *,
        entity_panel: protos.event.entity_pb2.EntityPartial | None = ...,
        nodes: collections.abc.Iterable[protos.event.monitor_pb2.MonitorPartial] | None = ...,
        filter: protos.event.query_base_pb2.Filter | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["entity_panel", b"entity_panel", "filter", b"filter"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["entity_panel", b"entity_panel", "filter", b"filter", "nodes", b"nodes"]) -> None: ...

global___EntityFunnelPanel = EntityFunnelPanel
